{
  "hash": "a86e35d859cf31be805c48664a327fc9",
  "result": {
    "markdown": "---\ntitle: \"Beginning Predictions\"\ndate: last-modified\neditor_options: \n  markdown: \n    wrap: sentence\n---\n\nWe're now going to make our first model.\n\n# Introduction\n\n# Homework from last time\n\nThere were three \"homework questions\" from last time:\n\n-   Repeat the EDA and visualizations for the 2019 data set.\n-   Commit and push your changes\n-   Combine the 2019 and 2020 datasets.\n\nThe first two are pretty straightforward, so I'll cover how to combine the 2018-2021 datasets.\nIt's important that we combine the datasets correctly as this dataset is what we'll be using going forward in these meetings.\n\n## Combining the datasets\n\nBefore we get started, let's check out the other spreadsheets.\nWe already saw what was in the 2018 data, but let's open the Excel spreadsheets for the other datasets to see how straightforward combining the datasets will be.\n\nAfter opening up the datasets, here are the primary issues facing us:\n\n-   *Columns have different names between the different datasets.* For example,\n\n::: {.cell}\n\n:::\n\nUp until now, we've just been doing EDA stuff.\nNow that we've done some of that, we can get started with modeling.\nFor this series, we're going to use `tidymodels` to keep our prediction workflows organized and reproducible.\n\nAs with most things in programming, there are several different ways to achieve what we're going to do.\nThis is just one way to do all of that.\n\n# Intro to Tidymodels\n\nThe [`tidymodels`](https://www.tidymodels.org/) framework is \"a collection of packages for modeling and machine learning using tidyverse principles.\" The `tidymodels` website has [several tutorials](https://www.tidymodels.org/start/) to introduce you to the fundamentals of working with `tidymodels`.\nIn this tutorial, create a random forest model.\n\nFor today's tutorial, you'll need to install the `xgboost` package.\n\n# A first, linear model\n\nLet's begin by reading in our data with some of our preprocessing.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\ndnr.2018 <- read_xlsx(\"data/IowaDNR_2018_Data_Merged.xlsx\") %>% \n  janitor::clean_names() %>% \n  filter(!is.na(collected_date)) %>% \n  mutate(hazard_class = if_else(\n    microcystin_raw_value_ug_l > 8,\n    \"hazardous\",\n    \"safe\"\n    ))\ndnr.2018 %>% \n  head()\n```\n:::\n\n::: {.cell}\n::: {.cell-output-stdout}\n```\n# A tibble: 6 × 18\n  sample_id  environmental_l… collected_date      microcystin_raw…   p_h doc_ppm\n  <chr>      <chr>            <dttm>                         <dbl> <dbl>   <dbl>\n1 1-21280001 Backbone Beach   2018-05-22 11:19:00            0.63    8.1    5.85\n2 5-21280001 Backbone Beach   2018-06-19 09:00:00            0.46    8.8    1.45\n3 14-212800… Backbone Beach   2018-08-21 13:00:00            0.438   8.9    2.15\n4 8-21280001 Backbone Beach   2018-07-10 11:15:00            0.425   8.2    1.91\n5 15-212800… Backbone Beach   2018-08-28 12:30:00            0.418   8.8    1.73\n6 13-212800… Backbone Beach   2018-08-14 10:30:00            0.405   8      1.50\n# … with 12 more variables: tkp_mg_p_l <dbl>, tkn_mg_n_l <dbl>,\n#   nh3_mg_n_l <chr>, n_ox_mg_n_l <dbl>, no2_mg_n_l <chr>, cl_mg_cl_l <chr>,\n#   so4_mg_so4_l <chr>, x16s_r_rna_gene_copies_m_l <dbl>,\n#   microcystismcy_a_gene_copies_m_l <dbl>,\n#   aanabaenamcy_a_gene_copies_m_l <dbl>,\n#   planktothrixmcy_a_gene_copies_m_l <dbl>, hazard_class <chr>\n```\n:::\n:::\n\n## \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(log1p(microcystin_raw_value_ug_l) ~ p_h, dnr.2018) %>% \n  summary()\n```\n\n::: {.cell-output-stdout}\n```\n\nCall:\nlm(formula = log1p(microcystin_raw_value_ug_l) ~ p_h, data = dnr.2018)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.8261 -0.3609 -0.1467  0.1201  3.5753 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -1.08299    0.51660  -2.096  0.03652 *  \np_h          0.20309    0.06127   3.315  0.00098 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5903 on 533 degrees of freedom\n  (4 observations deleted due to missingness)\nMultiple R-squared:  0.0202,\tAdjusted R-squared:  0.01836 \nF-statistic: 10.99 on 1 and 533 DF,  p-value: 0.0009802\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rec <- recipe(microcystin_raw_value_ug_l ~ p_h, dnr.2018)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mod <- linear_reg()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_workflow <- workflow() %>% \n  add_model(lm_mod) %>% \n  add_recipe(lm_rec)\n```\n:::\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}