[
  {
    "objectID": "docs/presentations/testpres.html#getting-up",
    "href": "docs/presentations/testpres.html#getting-up",
    "title": "Test",
    "section": "Getting up",
    "text": "Getting up\nAnd doing stuff"
  },
  {
    "objectID": "docs/presentations/testpres.html#coming-down",
    "href": "docs/presentations/testpres.html#coming-down",
    "title": "Test",
    "section": "Coming down",
    "text": "Coming down\nAnd finishing"
  },
  {
    "objectID": "docs/meetings/getting_started.html",
    "href": "docs/meetings/getting_started.html",
    "title": "Getting Started",
    "section": "",
    "text": "For the first lesson, we’ll set up the project we’ll work in for the next several meetings. By the end of today, we’ll have:\nAlong the way, we’ll be using Quarto documents (successor to RMarkdown documents) so that our work is well-documented and ready to share. Before we get started with all of that, though, let’s familiarize ourselves with the data we’ll be working with."
  },
  {
    "objectID": "docs/meetings/getting_started.html#the-iowa-dnrs-lake-monitoring-dataset",
    "href": "docs/meetings/getting_started.html#the-iowa-dnrs-lake-monitoring-dataset",
    "title": "Getting Started",
    "section": "The Iowa DNR’s Lake Monitoring Dataset",
    "text": "The Iowa DNR’s Lake Monitoring Dataset\nFor the past several decades, the Iowa Department of Natural Resources has been monitoring the water quality of multiple beaches throughout Iowa in order to better understand harmful algal blooms. Between Memorial and Labor day, weekly water samples are taken from these beaches and several chemical and biological measurements are taken. In addition to these measurements, we will incorporate land-use classifications and weather data.\n\n\n\n\n\nThe beaches that the Iowa DNR collected water samples from in 2018.\n\n\nThe measurement of interest is the microcystin concentration, measured in ug/L. When this measurement is above the EPA-recommend 8 ug/L, the beach is closed as it is considered dangerous to humans at that point. Hence, this is considered a supervised learning problem.\nThe goal of the project will be to use this data to:\n\nAttempt to better understand what drives harmful algal blooms\nCreate a model that can predict harmful algal blooms\n\nNow that we know a little bit about the data we’ll be working with and the problem we’re being asked to solve, let’s go ahead and set up our project."
  },
  {
    "objectID": "docs/meetings/getting_started.html#checking-year-counts",
    "href": "docs/meetings/getting_started.html#checking-year-counts",
    "title": "Getting Started",
    "section": "Checking year counts",
    "text": "Checking year counts\nLet’s start off by counting the samples by year to make sure that the dataset doesn’t have any observations from other years. Since collected_date is a datetime object (as denoted by the dttm beneath the column name), we can use the year function from lubridate to count:\n\ndnr.2018 %>% \n  count(year(collected_date))\n\n# A tibble: 2 × 2\n  `year(collected_date)`     n\n                   <dbl> <int>\n1                   2018   539\n2                     NA     1\n\n\nIt looks like there’s an observation that doesn’t have the year for some reason. Let’s take a look at it:\n\ndnr.2018 %>% \n  filter(is.na(collected_date))\n\n# A tibble: 1 × 17\n  sample_id  environmental_l… collected_date microcystin_raw_valu…   p_h doc_ppm\n  <chr>      <chr>            <dttm>                         <dbl> <dbl>   <dbl>\n1 4-21070001 George Wyth Bea… NA                                NA    NA      NA\n# … with 11 more variables: tkp_mg_p_l <dbl>, tkn_mg_n_l <dbl>,\n#   nh3_mg_n_l <chr>, n_ox_mg_n_l <dbl>, no2_mg_n_l <chr>, cl_mg_cl_l <chr>,\n#   so4_mg_so4_l <chr>, x16s_r_rna_gene_copies_m_l <dbl>,\n#   microcystismcy_a_gene_copies_m_l <dbl>,\n#   aanabaenamcy_a_gene_copies_m_l <dbl>,\n#   planktothrixmcy_a_gene_copies_m_l <dbl>\n\n\nFor some reason, this observation has no data, but has a sample_id and location. Checking the original Excel file confirms that this is the case, and so we can remove this row as an additional step when we read in the file. The updated command to read in the file is:\n\ndnr.2018 <- read_xlsx(\"data/IowaDNR_2018_Data_Merged.xlsx\") %>% \n  clean_names() %>% \n  filter(!is.na(collected_date))\ndnr.2018 %>% \n  head()\n\n\n\n# A tibble: 6 × 17\n  sample_id  environmental_l… collected_date      microcystin_raw…   p_h doc_ppm\n  <chr>      <chr>            <dttm>                         <dbl> <dbl>   <dbl>\n1 1-21280001 Backbone Beach   2018-05-22 11:19:00            0.63    8.1    5.85\n2 5-21280001 Backbone Beach   2018-06-19 09:00:00            0.46    8.8    1.45\n3 14-212800… Backbone Beach   2018-08-21 13:00:00            0.438   8.9    2.15\n4 8-21280001 Backbone Beach   2018-07-10 11:15:00            0.425   8.2    1.91\n5 15-212800… Backbone Beach   2018-08-28 12:30:00            0.418   8.8    1.73\n6 13-212800… Backbone Beach   2018-08-14 10:30:00            0.405   8      1.50\n# … with 11 more variables: tkp_mg_p_l <dbl>, tkn_mg_n_l <dbl>,\n#   nh3_mg_n_l <chr>, n_ox_mg_n_l <dbl>, no2_mg_n_l <chr>, cl_mg_cl_l <chr>,\n#   so4_mg_so4_l <chr>, x16s_r_rna_gene_copies_m_l <dbl>,\n#   microcystismcy_a_gene_copies_m_l <dbl>,\n#   aanabaenamcy_a_gene_copies_m_l <dbl>,\n#   planktothrixmcy_a_gene_copies_m_l <dbl>\n\n\nLet’s count again to confirm this works:\n\ndnr.2018 %>% \n  count(year(collected_date))\n\n# A tibble: 1 × 2\n  `year(collected_date)`     n\n                   <dbl> <int>\n1                   2018   539\n\n\nGreat! Now all of the remaining data has the correct year."
  },
  {
    "objectID": "docs/meetings/getting_started.html#exploring-microcystin",
    "href": "docs/meetings/getting_started.html#exploring-microcystin",
    "title": "Getting Started",
    "section": "Exploring microcystin",
    "text": "Exploring microcystin\nSince the microcystin concentration is how we’re going to label the samples, we need to check that they’re all there. Similar to the above, we can count the number of missing rows using is.na and count:\n\ndnr.2018 %>% \n  count(is.na(microcystin_raw_value_ug_l))\n\n# A tibble: 1 × 2\n  `is.na(microcystin_raw_value_ug_l)`     n\n  <lgl>                               <int>\n1 FALSE                                 539\n\n\nThis tells us that there are no missing values in the microcystin column, which is good since we won’t need to throw any data away.\nNow let’s see how the microcystin is distributed:\n\ndnr.2018 %>% \n  ggplot(aes(microcystin_raw_value_ug_l)) +\n  geom_histogram(color = \"black\", fill = \"white\") +\n  labs(\n    x = \"Microcystin (ug/L)\",\n    y = \"Count\",\n    title = \"Microcystin concentration (all lakes, all weeks)\"\n  ) + \n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\nThe data shows a long right tail. This is our first hint that this is a highly imbalanced dataset.\n\nCreating the hazard_class variable\nTo get a better idea of this, let’s create a new class variable based on the microcystin concentration: if the microcystin is greater than 8 ug/L, we’ll say that it is hazardous, and safe otherwise. For now, let’s just check print out the results and check that it works as we expected it to:\n\ndnr.2018 %>% \n  mutate(hazard_class = if_else(\n    microcystin_raw_value_ug_l > 8,\n    \"hazardous\",\n    \"safe\"\n  )) %>% \n  select(microcystin_raw_value_ug_l, hazard_class)\n\n# A tibble: 539 × 2\n   microcystin_raw_value_ug_l hazard_class\n                        <dbl> <chr>       \n 1                      0.63  safe        \n 2                      0.46  safe        \n 3                      0.438 safe        \n 4                      0.425 safe        \n 5                      0.418 safe        \n 6                      0.405 safe        \n 7                      0.39  safe        \n 8                      0.3   safe        \n 9                      0.237 safe        \n10                      0.205 safe        \n# … with 529 more rows\n\n\nOkay, this looks correct. Let’s update our code that reads in the data to include this before we forget:\n\ndnr.2018 <- read_xlsx(\"data/IowaDNR_2018_Data_Merged.xlsx\") %>% \n  clean_names() %>% \n  filter(!is.na(collected_date)) %>% \n  mutate(hazard_class = if_else(\n    microcystin_raw_value_ug_l > 8,\n    \"hazardous\",\n    \"safe\"\n    ))\ndnr.2018 %>% \n  head()\n\n\n\n# A tibble: 6 × 18\n  sample_id  environmental_l… collected_date      microcystin_raw…   p_h doc_ppm\n  <chr>      <chr>            <dttm>                         <dbl> <dbl>   <dbl>\n1 1-21280001 Backbone Beach   2018-05-22 11:19:00            0.63    8.1    5.85\n2 5-21280001 Backbone Beach   2018-06-19 09:00:00            0.46    8.8    1.45\n3 14-212800… Backbone Beach   2018-08-21 13:00:00            0.438   8.9    2.15\n4 8-21280001 Backbone Beach   2018-07-10 11:15:00            0.425   8.2    1.91\n5 15-212800… Backbone Beach   2018-08-28 12:30:00            0.418   8.8    1.73\n6 13-212800… Backbone Beach   2018-08-14 10:30:00            0.405   8      1.50\n# … with 12 more variables: tkp_mg_p_l <dbl>, tkn_mg_n_l <dbl>,\n#   nh3_mg_n_l <chr>, n_ox_mg_n_l <dbl>, no2_mg_n_l <chr>, cl_mg_cl_l <chr>,\n#   so4_mg_so4_l <chr>, x16s_r_rna_gene_copies_m_l <dbl>,\n#   microcystismcy_a_gene_copies_m_l <dbl>,\n#   aanabaenamcy_a_gene_copies_m_l <dbl>,\n#   planktothrixmcy_a_gene_copies_m_l <dbl>, hazard_class <chr>\n\n\nAnd now, let’s see just how imbalanced these samples are:\n\ndnr.2018 %>% \n  count(hazard_class) %>% \n  mutate()\n\n# A tibble: 2 × 2\n  hazard_class     n\n  <chr>        <int>\n1 hazardous       17\n2 safe           522\n\n\nSo, of the 539 total samples, only 17 of them are considered hazardous. To put numbers on how imbalanced this is:\n\ndnr.2018 %>% \n  group_by(hazard_class) %>% \n  summarise(n = n()) %>% \n  mutate(prop = n / sum(n))\n\n# A tibble: 2 × 3\n  hazard_class     n   prop\n  <chr>        <int>  <dbl>\n1 hazardous       17 0.0315\n2 safe           522 0.968 \n\n\nOnly 3% of our samples belong to the minority class. This is an extremely imbalanced dataset and we must address this when we do our model training and predictions.\n\n\n\n\n\n\nNote that putting the microcystin on a log scale makes the distribution appear normal. This is an example of a log-normal distribution. Here is some further reading:\n\nA good post about its statistical properties\nA post about making predictions on a log-normal distribution"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GERMS-DS",
    "section": "",
    "text": "Schedule\nThe first GERMS-DS meeting is on Monday, April 11 at 9AM in Elings 4321. Future meetings will be held every other Monday at the same time.\n\n\nWhat you need to get started\n\nInstall R and the latest version of RStudio\nInstall Quarto\nInstall the tidyverse, tidymodels, rmarkdown, janitor, lubridate, and readxl libraries"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]